<?php

/**
 * BaseCommentaire
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property clob $message
 * @property integer $article_id
 * @property string $pseudo
 * @property string $email
 * @property string $site
 * @property Article $article
 * 
 * @method clob        getMessage()    Returns the current record's "message" value
 * @method integer     getArticleId()  Returns the current record's "article_id" value
 * @method string      getPseudo()     Returns the current record's "pseudo" value
 * @method string      getEmail()      Returns the current record's "email" value
 * @method string      getSite()       Returns the current record's "site" value
 * @method Article     getArticle()    Returns the current record's "article" value
 * @method Commentaire setMessage()    Sets the current record's "message" value
 * @method Commentaire setArticleId()  Sets the current record's "article_id" value
 * @method Commentaire setPseudo()     Sets the current record's "pseudo" value
 * @method Commentaire setEmail()      Sets the current record's "email" value
 * @method Commentaire setSite()       Sets the current record's "site" value
 * @method Commentaire setArticle()    Sets the current record's "article" value
 * 
 * @package    foliov4
 * @subpackage model
 * @author     Julien Lafont
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCommentaire extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('commentaire');
        $this->hasColumn('message', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('article_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('pseudo', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('email', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('site', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Article as article', array(
             'local' => 'article_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}