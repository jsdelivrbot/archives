<?php

/**
 * BaseCreation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property varchar $titre
 * @property varchar $sstitre
 * @property varchar $code
 * @property clob $description1
 * @property clob $description2
 * @property clob $mini_desc1
 * @property clob $mini_desc2
 * @property varchar $url
 * @property varchar $miniature
 * @property varchar $bandeau
 * @property varchar $annee
 * @property timestamp $date
 * @property varchar $client
 * @property varchar $techno
 * @property varchar $duree
 * @property integer $categorie_id
 * @property boolean $use_alternatif
 * @property CategorieFolio $Categorie
 * @property Doctrine_Collection $Technos
 * @property Doctrine_Collection $RelTechnoCreation
 * 
 * @method varchar             getTitre()             Returns the current record's "titre" value
 * @method varchar             getSstitre()           Returns the current record's "sstitre" value
 * @method varchar             getCode()              Returns the current record's "code" value
 * @method clob                getDescription1()      Returns the current record's "description1" value
 * @method clob                getDescription2()      Returns the current record's "description2" value
 * @method clob                getMiniDesc1()         Returns the current record's "mini_desc1" value
 * @method clob                getMiniDesc2()         Returns the current record's "mini_desc2" value
 * @method varchar             getUrl()               Returns the current record's "url" value
 * @method varchar             getMiniature()         Returns the current record's "miniature" value
 * @method varchar             getBandeau()           Returns the current record's "bandeau" value
 * @method varchar             getAnnee()             Returns the current record's "annee" value
 * @method timestamp           getDate()              Returns the current record's "date" value
 * @method varchar             getClient()            Returns the current record's "client" value
 * @method varchar             getTechno()            Returns the current record's "techno" value
 * @method varchar             getDuree()             Returns the current record's "duree" value
 * @method integer             getCategorieId()       Returns the current record's "categorie_id" value
 * @method boolean             getUseAlternatif()     Returns the current record's "use_alternatif" value
 * @method CategorieFolio      getCategorie()         Returns the current record's "Categorie" value
 * @method Doctrine_Collection getTechnos()           Returns the current record's "Technos" collection
 * @method Doctrine_Collection getRelTechnoCreation() Returns the current record's "RelTechnoCreation" collection
 * @method Creation            setTitre()             Sets the current record's "titre" value
 * @method Creation            setSstitre()           Sets the current record's "sstitre" value
 * @method Creation            setCode()              Sets the current record's "code" value
 * @method Creation            setDescription1()      Sets the current record's "description1" value
 * @method Creation            setDescription2()      Sets the current record's "description2" value
 * @method Creation            setMiniDesc1()         Sets the current record's "mini_desc1" value
 * @method Creation            setMiniDesc2()         Sets the current record's "mini_desc2" value
 * @method Creation            setUrl()               Sets the current record's "url" value
 * @method Creation            setMiniature()         Sets the current record's "miniature" value
 * @method Creation            setBandeau()           Sets the current record's "bandeau" value
 * @method Creation            setAnnee()             Sets the current record's "annee" value
 * @method Creation            setDate()              Sets the current record's "date" value
 * @method Creation            setClient()            Sets the current record's "client" value
 * @method Creation            setTechno()            Sets the current record's "techno" value
 * @method Creation            setDuree()             Sets the current record's "duree" value
 * @method Creation            setCategorieId()       Sets the current record's "categorie_id" value
 * @method Creation            setUseAlternatif()     Sets the current record's "use_alternatif" value
 * @method Creation            setCategorie()         Sets the current record's "Categorie" value
 * @method Creation            setTechnos()           Sets the current record's "Technos" collection
 * @method Creation            setRelTechnoCreation() Sets the current record's "RelTechnoCreation" collection
 * 
 * @package    foliov4
 * @subpackage model
 * @author     Julien Lafont
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCreation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('creation');
        $this->hasColumn('titre', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('sstitre', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('code', 'varchar', 20, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('description1', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('description2', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('mini_desc1', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('mini_desc2', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('url', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('miniature', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('bandeau', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('annee', 'varchar', 4, array(
             'type' => 'varchar',
             'length' => 4,
             ));
        $this->hasColumn('date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('client', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('techno', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('duree', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('categorie_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('use_alternatif', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CategorieFolio as Categorie', array(
             'local' => 'categorie_id',
             'foreign' => 'id'));

        $this->hasMany('Techno as Technos', array(
             'refClass' => 'RelTechnoCreation',
             'local' => 'creation_id',
             'foreign' => 'techno_id'));

        $this->hasMany('RelTechnoCreation', array(
             'local' => 'id',
             'foreign' => 'creation_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'titre',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($sluggable0);
    }
}