<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $titre
 * @property datetime $date
 * @property clob $chapeau
 * @property clob $contenu
 * @property integer $duree_redaction
 * @property string $copyright
 * @property integer $nb_lu
 * @property integer $categorie_id
 * @property boolean $publie
 * @property boolean $afficher_chapeau
 * @property Doctrine_Collection $Commentaires
 * @property Doctrine_Collection $Articles_lies
 * @property Categorie $Categorie
 * @property Doctrine_Collection $ReverseArticlesLies
 * @property Doctrine_Collection $ArticlesLies
 * 
 * @method string              getTitre()               Returns the current record's "titre" value
 * @method datetime            getDate()                Returns the current record's "date" value
 * @method clob                getChapeau()             Returns the current record's "chapeau" value
 * @method clob                getContenu()             Returns the current record's "contenu" value
 * @method integer             getDureeRedaction()      Returns the current record's "duree_redaction" value
 * @method string              getCopyright()           Returns the current record's "copyright" value
 * @method integer             getNbLu()                Returns the current record's "nb_lu" value
 * @method integer             getCategorieId()         Returns the current record's "categorie_id" value
 * @method boolean             getPublie()              Returns the current record's "publie" value
 * @method boolean             getAfficherChapeau()     Returns the current record's "afficher_chapeau" value
 * @method Doctrine_Collection getCommentaires()        Returns the current record's "Commentaires" collection
 * @method Doctrine_Collection getArticlesLies()        Returns the current record's "Articles_lies" collection
 * @method Categorie           getCategorie()           Returns the current record's "Categorie" value
 * @method Doctrine_Collection getReverseArticlesLies() Returns the current record's "ReverseArticlesLies" collection
 * @method Doctrine_Collection getArticlesLies()        Returns the current record's "ArticlesLies" collection
 * @method Article             setTitre()               Sets the current record's "titre" value
 * @method Article             setDate()                Sets the current record's "date" value
 * @method Article             setChapeau()             Sets the current record's "chapeau" value
 * @method Article             setContenu()             Sets the current record's "contenu" value
 * @method Article             setDureeRedaction()      Sets the current record's "duree_redaction" value
 * @method Article             setCopyright()           Sets the current record's "copyright" value
 * @method Article             setNbLu()                Sets the current record's "nb_lu" value
 * @method Article             setCategorieId()         Sets the current record's "categorie_id" value
 * @method Article             setPublie()              Sets the current record's "publie" value
 * @method Article             setAfficherChapeau()     Sets the current record's "afficher_chapeau" value
 * @method Article             setCommentaires()        Sets the current record's "Commentaires" collection
 * @method Article             setArticlesLies()        Sets the current record's "Articles_lies" collection
 * @method Article             setCategorie()           Sets the current record's "Categorie" value
 * @method Article             setReverseArticlesLies() Sets the current record's "ReverseArticlesLies" collection
 * @method Article             setArticlesLies()        Sets the current record's "ArticlesLies" collection
 * 
 * @package    foliov4
 * @subpackage model
 * @author     Julien Lafont
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('titre', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('chapeau', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('contenu', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('duree_redaction', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('copyright', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('nb_lu', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('categorie_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('publie', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('afficher_chapeau', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Commentaire as Commentaires', array(
             'local' => 'id',
             'foreign' => 'article_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Article as Articles_lies', array(
             'refClass' => 'ArticlesLies',
             'local' => 'article_src_id',
             'foreign' => 'article_liee_id'));

        $this->hasOne('Categorie', array(
             'local' => 'categorie_id',
             'foreign' => 'id'));

        $this->hasMany('Article as ReverseArticlesLies', array(
             'refClass' => 'ArticlesLies',
             'local' => 'article_liee_id',
             'foreign' => 'article_src_id'));

        $this->hasMany('ArticlesLies', array(
             'local' => 'id',
             'foreign' => 'article_src_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'titre',
             ),
             'canUpdate' => true,
             ));
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'titre',
              1 => 'contenu',
             ),
             ));
        $taggable0 = new Taggable();
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
        $this->actAs($searchable0);
        $this->actAs($taggable0);
    }
}